name: Build & Deploy to VM (Markahost)

on:
  push:
    branches:
      - markahost

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image with custom Dockerfile
      run: |
        docker build -t ecommerce-webadmin:latest -f Dockerfile.markahost.prod .
    - name: Save Docker image to tar
      run: |
        docker save ecommerce-webadmin:latest -o ecommerce-webadmin.tar
    - name: Upload .tar to VM via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        port: 22
        source: "ecommerce-webadmin.tar"
        target: "/mnt/bigstorage/docker-images/"
    - name: SSH into VM and load + run Docker containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        port: 22
        script: |
          appName=ecommerce-webadmin
          dockerImageTarFileName=$appName.tar
          tag=latest
          destinationPathToDockerImageTarFile=/mnt/bigstorage/docker-images/$dockerImageTarFileName
          appPort=5051
          firstContainerPort=5051
          secondContainerPort=50510
          networkName=herkesewebnetwork
          echo "## Docker Image yükleniyor..."
          sudo docker load -i "$destinationPathToDockerImageTarFile"
          echo "### Yüklendi."
          echo "### 1. Container ($appName) durduruluyor..."
          sudo docker rm -f "$appName" || true
          echo "### Silindi."
          echo "## Docker Image ve Volume Listesi:"
          sudo docker ps
          sudo docker volume ls
          echo "## 1. container tekrar başlatiliyor..."
          sudo docker run -d \
            --name "$appName" \
            -p $firstContainerPort:$appPort \
            -e HOST=0.0.0.0 \
            -e PORT=$appPort \
            -v /mnt/bigstorage/ecommerce/uploads:/opt/app/public/uploads \
            --network "$networkName" \
            --memory="1g" \
            --cpus=".5" \
            --restart always \
            "$appName:$tag"
          echo "### 1. container çalışıyor."
          echo "### 2. Container ($appName-2) durduruluyor..."
          sudo docker rm -f "$appName-2" || true
          echo "### Silindi."
          echo "## Docker Image ve Volume Listesi:"
          sudo docker ps
          sudo docker volume ls
          echo "## 2. container başlatılıyor..."
          sudo docker run -d \
            --name "$appName-2" \
            -p $secondContainerPort:$appPort \
            -e HOST=0.0.0.0 \
            -e PORT=$appPort \
            -v /mnt/bigstorage/ecommerce/uploads:/opt/app/public/uploads \
            --network "$networkName" \
            --memory="1g" \
            --cpus=".5" \
            --restart always \
            "$appName:$tag"
          echo "### 2. container çalışıyor."
